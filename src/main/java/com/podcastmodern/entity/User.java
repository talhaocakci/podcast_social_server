package com.podcastmodern.entity;
// Generated Nov 18, 2015 1:35:40 PM by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "podcastmodern")
public class User implements java.io.Serializable {

    private Integer userId;
    private String name;
    private String surname;
    private String minAge;
    private String maxAge;
    private String country;
    private String language;
    private String email;
    private String fbToken;
    private String googleToken;
    private String twitterToken;
    private String gender;
    private String displayName;
    private String gcmToken;
    private Set<ApplicationUser> applicationUsers = new HashSet<ApplicationUser>(0);
    private Set<UserCloudmessaging> userCloudmessagings = new HashSet<UserCloudmessaging>(0);

    public User() {
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "user_id", unique = true, nullable = false)
    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    @Column(name = "name", length = 50)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "surname", length = 50)
    public String getSurname() {
        return this.surname;
    }

    public void setSurname(String surname) {
        this.surname = surname;
    }

    @Column(name = "min_age", length = 45)
    public String getMinAge() {
        return this.minAge;
    }

    public void setMinAge(String minAge) {
        this.minAge = minAge;
    }

    @Column(name = "max_age", length = 45)
    public String getMaxAge() {
        return this.maxAge;
    }

    public void setMaxAge(String maxAge) {
        this.maxAge = maxAge;
    }

    @Column(name = "country", length = 20)
    public String getCountry() {
        return this.country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    @Column(name = "language", length = 45)
    public String getLanguage() {
        return this.language;
    }

    public void setLanguage(String language) {
        this.language = language;
    }

    @Column(name = "email", length = 45)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "fb_token", length = 90)
    public String getFbToken() {
        return this.fbToken;
    }

    public void setFbToken(String fbToken) {
        this.fbToken = fbToken;
    }

    @Column(name = "google_token", length = 90)
    public String getGoogleToken() {
        return this.googleToken;
    }

    public void setGoogleToken(String googleToken) {
        this.googleToken = googleToken;
    }

    @Column(name = "twitter_token", length = 90)
    public String getTwitterToken() {
        return this.twitterToken;
    }

    public void setTwitterToken(String twitterToken) {
        this.twitterToken = twitterToken;
    }

    @Column(name = "gender", length = 6)
    public String getGender() {
        return this.gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    @Column(name = "display_name", length = 75)
    public String getDisplayName() {
        return this.displayName;
    }

    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    @Column(name = "gcm_token", length = 450)
    public String getGcmToken() {
        return this.gcmToken;
    }

    public void setGcmToken(String gcmToken) {
        this.gcmToken = gcmToken;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<ApplicationUser> getApplicationUsers() {
        return this.applicationUsers;
    }

    public void setApplicationUsers(Set<ApplicationUser> applicationUsers) {
        this.applicationUsers = applicationUsers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<UserCloudmessaging> getUserCloudmessagings() {
        return this.userCloudmessagings;
    }

    public void setUserCloudmessagings(Set<UserCloudmessaging> userCloudmessagings) {
        this.userCloudmessagings = userCloudmessagings;
    }

}
